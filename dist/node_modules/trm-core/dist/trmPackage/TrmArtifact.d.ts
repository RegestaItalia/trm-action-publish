/// <reference types="node" />
import { Manifest } from "../manifest";
import { TRKORR } from "../rfc/components";
import { BinaryTransport, Transport, TrmTransportIdentifier } from "../transport";
export declare class TrmArtifact {
    binary: Buffer;
    private _distFolder?;
    private _manifest?;
    private _zip;
    constructor(binary: Buffer, _distFolder?: string, _manifest?: Manifest);
    getManifest(): Manifest | null;
    replaceManifest(oManifest: Manifest): void;
    getDistFolder(): string | null;
    getTransportBinaries(tmpFolder?: string): Promise<{
        trkorr: TRKORR;
        type?: TrmTransportIdentifier;
        binaries: BinaryTransport;
    }[]>;
    static create(transports: Transport[], manifest: Manifest, skipLog?: boolean, distFolder?: string): Promise<TrmArtifact>;
}
