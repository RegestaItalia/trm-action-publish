import { Registry } from "../../registry";
import { Release } from "trm-registry-types";
import { TrmPackage } from "../../trmPackage";
import { InstallActionInput, InstallActionOutput } from "../install";
export type InstallDependencyActionInput = {
    packageName: string;
    versionRange: string;
    registry: Registry;
    installOptions: InstallActionInput;
    forceInstall?: boolean;
    integrity?: string;
    systemPackages?: TrmPackage[];
};
type WorkflowParsedInput = {
    packageName?: string;
    versionRange?: string;
    forceInstall?: boolean;
    installOptions?: InstallActionInput;
    integrity?: string;
    systemPackages?: TrmPackage[];
};
type WorkflowRuntime = {
    registry?: Registry;
    releases?: Release[];
    releasePackages?: TrmPackage[];
    skipInstall?: boolean;
};
export type InstallDependencyActionOutput = {
    version?: string;
    installOutput?: InstallActionOutput;
};
export type InstallDependencyWorkflowContext = {
    rawInput: InstallDependencyActionInput;
    parsedInput: WorkflowParsedInput;
    runtime: WorkflowRuntime;
    output?: InstallDependencyActionOutput;
};
export declare function installDependency(inputData: InstallDependencyActionInput): Promise<InstallDependencyActionOutput>;
export {};
