"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readDevcTransport = void 0;
const logger_1 = require("../../logger");
const commons_1 = require("../../commons");
exports.readDevcTransport = {
    name: 'read-devc-transport',
    run: (context) => __awaiter(void 0, void 0, void 0, function* () {
        const r3trans = context.runtime.r3trans;
        const devcTransport = context.runtime.devcTransport;
        const transportData = devcTransport.binaries.data;
        logger_1.Logger.loading(`Checking package content...`);
        const tdevc = (0, commons_1.normalize)(yield r3trans.getTableEntries(transportData, 'TDEVC'));
        const tdevct = (0, commons_1.normalize)(yield r3trans.getTableEntries(transportData, 'TDEVCT'));
        if (tdevc.length === 0) {
            throw new Error(`Package has no devclass data.`);
        }
        context.runtime.tdevcData = tdevc;
        context.runtime.tdevctData = tdevct;
    })
};
