"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkSapEntries = void 0;
function checkSapEntries(sapEntries, system) {
    return __awaiter(this, void 0, void 0, function* () {
        var missingSapEntries = [];
        for (const sapTable of Object.keys(sapEntries)) {
            for (const sapEntry of sapEntries[sapTable]) {
                const exists = yield system.checkSapEntryExists(sapTable, sapEntry);
                if (!exists) {
                    var arrayIndex = missingSapEntries.findIndex(o => o.table === sapTable);
                    if (arrayIndex < 0) {
                        arrayIndex = missingSapEntries.push({
                            table: sapTable,
                            entries: []
                        });
                        arrayIndex--;
                    }
                    missingSapEntries[arrayIndex].entries.push(sapEntry);
                }
            }
        }
        return {
            missingSapEntries
        };
    });
}
exports.checkSapEntries = checkSapEntries;
