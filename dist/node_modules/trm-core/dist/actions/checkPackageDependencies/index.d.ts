import { TrmPackage } from "../../trmPackage";
import { TrmManifestDependency } from "../../manifest";
import { LogTableStruct } from "../../commons";
export type CheckPackageDependencyActionInput = {
    trmPackage: TrmPackage;
    print: boolean;
    systemPackages?: TrmPackage[];
};
type WorkflowParsedInput = {
    print?: boolean;
    packageName?: string;
    dependencies?: TrmManifestDependency[];
    systemPackages?: TrmPackage[];
};
type WorkflowRuntime = {
    table?: LogTableStruct;
    versionOkDependencies?: TrmManifestDependency[];
    versionKoDependencies?: TrmManifestDependency[];
    integrityOkDependencies?: TrmManifestDependency[];
    integrityKoDependencies?: TrmManifestDependency[];
};
export type CheckPackageDependencyActionOutput = {
    dependencies?: TrmManifestDependency[];
    dependencyStatus?: {
        dependency: TrmManifestDependency;
        match: boolean;
        safe: boolean;
    }[];
};
export type CheckPackageDependencyWorkflowContext = {
    rawInput: CheckPackageDependencyActionInput;
    parsedInput: WorkflowParsedInput;
    runtime: WorkflowRuntime;
    output: CheckPackageDependencyActionOutput;
};
export declare function checkPackageDependencies(inputData: CheckPackageDependencyActionInput): Promise<CheckPackageDependencyActionOutput>;
export {};
