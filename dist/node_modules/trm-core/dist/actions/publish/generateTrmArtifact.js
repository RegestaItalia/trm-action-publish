"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTrmArtifact = void 0;
const logger_1 = require("../../logger");
const trmPackage_1 = require("../../trmPackage");
exports.generateTrmArtifact = {
    name: 'generate-trm-artifact',
    run: (context) => __awaiter(void 0, void 0, void 0, function* () {
        logger_1.Logger.loading(`Generating TRM Artifact...`);
        var aTransports = [];
        aTransports.push(context.runtime.tadirTransport);
        if (context.runtime.langTransport) {
            aTransports.push(context.runtime.langTransport);
        }
        if (context.runtime.custTransport) {
            aTransports.push(context.runtime.custTransport);
        }
        aTransports.push(context.runtime.devcTransport);
        context.runtime.artifact = yield trmPackage_1.TrmArtifact.create(aTransports, context.runtime.trmPackage.manifest);
    })
};
