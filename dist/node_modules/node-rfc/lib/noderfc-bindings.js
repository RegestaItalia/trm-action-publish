"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.environment = exports.noderfc_binding = exports.Promise = exports.RfcLoggingLevel = exports.RfcLoggingClass = void 0;
const path_1 = __importDefault(require("path"));
const os_1 = __importDefault(require("os"));
const bluebird_1 = require("bluebird");
Object.defineProperty(exports, "Promise", { enumerable: true, get: function () { return bluebird_1.Promise; } });
var RfcLoggingClass;
(function (RfcLoggingClass) {
    RfcLoggingClass[RfcLoggingClass["client"] = 0] = "client";
    RfcLoggingClass[RfcLoggingClass["pool"] = 1] = "pool";
    RfcLoggingClass[RfcLoggingClass["server"] = 2] = "server";
    RfcLoggingClass[RfcLoggingClass["throughput"] = 3] = "throughput";
    RfcLoggingClass[RfcLoggingClass["nwrfc"] = 4] = "nwrfc";
    RfcLoggingClass[RfcLoggingClass["addon"] = 5] = "addon";
})(RfcLoggingClass || (exports.RfcLoggingClass = RfcLoggingClass = {}));
var RfcLoggingLevel;
(function (RfcLoggingLevel) {
    RfcLoggingLevel[RfcLoggingLevel["none"] = 0] = "none";
    RfcLoggingLevel[RfcLoggingLevel["fatal"] = 1] = "fatal";
    RfcLoggingLevel[RfcLoggingLevel["error"] = 2] = "error";
    RfcLoggingLevel[RfcLoggingLevel["warning"] = 3] = "warning";
    RfcLoggingLevel[RfcLoggingLevel["info"] = 4] = "info";
    RfcLoggingLevel[RfcLoggingLevel["debug"] = 5] = "debug";
    RfcLoggingLevel[RfcLoggingLevel["all"] = 6] = "all";
})(RfcLoggingLevel || (exports.RfcLoggingLevel = RfcLoggingLevel = {}));
const E = {
    platform: {
        name: os_1.default.platform(),
        arch: os_1.default.arch(),
        release: os_1.default.release(),
    },
    env: {
        SAPNWRFC_HOME: process.env.SAPNWRFC_HOME || "",
        RFC_INI: process.env.RFC_INI || "",
    },
    versions: process.versions,
};
if (E.platform.name === "win32") {
    E.env["nwrfcsdk_lib_on_path"] = false;
    if (E.env.SAPNWRFC_HOME.length > 0) {
        const P = process.env.PATH;
        if (P !== undefined) {
            E.env["nwrfcsdk_lib_on_path"] =
                P.toUpperCase().indexOf(`${E.env.SAPNWRFC_HOME}\\lib;`.toUpperCase()) > -1;
        }
    }
}
let noderfc_binding;
try {
    const hasEnvValue = typeof process.env.NODE_RFC_MODULE_PATH !== "undefined";
    const modulePath = hasEnvValue
        ? process.env.NODE_RFC_MODULE_PATH
        : path_1.default.resolve(__dirname, "..");
    exports.noderfc_binding = noderfc_binding = require("node-gyp-build")(modulePath);
}
catch (ex) {
    const err = ex;
    err.message += `\nenvironment: ${JSON.stringify(E, null, 2)}\n`;
    throw err;
}
const environment = Object.assign({}, E, {
    noderfc: noderfc_binding.bindingVersions,
});
exports.environment = environment;
